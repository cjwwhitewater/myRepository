#pragma once

#include <functional>
#include "dji_liveview.h"
#include "dji_camera_manager.h"

typedef std::function<void(const uint8_t*buf, uint32_t len)> VideoDataProcessor;

class VideoReader{
public:
    VideoReader();
    ~VideoReader();

    // Initialize the liveview module of PSDK, and start the generating of H264
    // video stream.
    void startVideoStream();

    // The client should call this function to set a functor to process/consume
    // video data produced by this class.
    void setVideoDataProcessor(VideoDataProcessor videoDataProcessor);

private:
    // PSDK API requires a C-style function to be a callback function.
    static void djiLiveviewH264Callback(E_DjiLiveViewCameraPosition position,
                                        const uint8_t* buf, uint32_t len);

private:
    // The following callback is a client specified functor to process video
    // data generated by this class.
    static VideoDataProcessor videoDataProcessor;
};
